# Generated by Django 4.2.16 on 2024-12-20 07:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=15, verbose_name='Телефон')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Loader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('phone', models.CharField(max_length=15, verbose_name='Телефон')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступен')),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость за час')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_address', models.TextField(verbose_name='Адрес загрузки')),
                ('delivery_address', models.TextField(verbose_name='Адрес доставки')),
                ('scheduled_time', models.DateTimeField(verbose_name='Время заказа')),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Итоговая стоимость')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Оплачен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.customer', verbose_name='Клиент')),
                ('loaders', models.ManyToManyField(blank=True, to='main.loader', verbose_name='Грузчики')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название продукта')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_plate', models.CharField(max_length=15, unique=True, verbose_name='Номерной знак')),
                ('vehicle_type', models.CharField(choices=[('small', 'Маленькая'), ('medium', 'Средняя'), ('large', 'Большая')], max_length=10, verbose_name='Тип машины')),
                ('capacity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Грузоподъемность (тонн)')),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость за час')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступна')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(max_length=50, verbose_name='Способ оплаты')),
                ('transaction_id', models.CharField(max_length=100, unique=True, verbose_name='ID транзакции')),
                ('paid_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата оплаты')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.order', verbose_name='Заказ')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.vehicle', verbose_name='Машина'),
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата отправки')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Отправитель')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.customer', verbose_name='Клиент')),
                ('orders', models.ManyToManyField(blank=True, to='main.order', verbose_name='Заказы')),
            ],
        ),
    ]
